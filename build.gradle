// -*- coding: utf-8; mode: groovy -*-

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "com.diffplug.gradle.spotless:spotless:1.3.3"
		classpath "de.thetaphi:forbiddenapis:2.2"
		classpath "de.aaschmid:gradle-cpd-plugin:1.0"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	}
}

// basic plugins
apply plugin: "java"
apply plugin: "spring-boot"

// custom configuration
apply from: 'gradle/version.gradle'
apply from: 'gradle/resolveDependencies.gradle'

// code quality plugins
apply plugin: "checkstyle"
apply plugin: "findbugs"
apply plugin: "pmd"
apply plugin: "cpd"
apply plugin: "jacoco"
apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "com.diffplug.gradle.spotless"

// code quality configuration
apply from: 'gradle/quality/checkstyle.gradle'
apply from: 'gradle/quality/findbugs.gradle'
apply from: 'gradle/quality/pmd.gradle'
apply from: 'gradle/quality/cpd.gradle'
apply from: 'gradle/quality/jacoco.gradle'
apply from: 'gradle/quality/forbiddenapis.gradle'
apply from: 'gradle/quality/spotless.gradle'

// basic configuration
group = "jp.classmethod.sparrow"
ext.artifactId = "sparrow"

// compiler configuration
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(AbstractCompile) each {
	it.options.encoding = "UTF-8"
}

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

// libraries
repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	// spring
	compile "org.springframework.boot:spring-boot-starter:$springBootVersion"

	// other
	compileOnly "org.projectlombok:lombok:$lombokVersion"

	// testing
	testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

// wrapper
task wrapper(type: Wrapper) {
	gradleVersion = "2.12"
}
